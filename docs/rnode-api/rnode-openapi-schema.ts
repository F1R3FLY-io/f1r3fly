/**
 * This file was auto-generated by swagger-to-ts.
 * Do not make direct changes to the file.
 */

export interface definitions {
  /**
   * RhoExpr
   */
  RhoExpr: {
    ExprMap?: definitions["ExprMap"];
    ExprList?: definitions["ExprList"];
    ExprTuple?: definitions["ExprTuple"];
    ExprPar?: definitions["ExprPar"];
    ExprUnforg?: definitions["ExprUnforg"];
    ExprString?: definitions["ExprString"];
    ExprInt?: definitions["ExprInt"];
    ExprBool?: definitions["ExprBool"];
    ExprUri?: definitions["ExprUri"];
    ExprBytes?: definitions["ExprBytes"];
  };
  /**
   * ExprList
   */
  ExprList: { ExprList: { data: definitions["RhoExpr"][] } };
  /**
   * ExprPar
   */
  ExprPar: { ExprPar: { data: definitions["RhoExpr"][] } };
  /**
   * BondInfo
   */
  BondInfo: { validator?: string; stake?: number };
  /**
   * ExprUri
   */
  ExprUri: { ExprUri: { data: string } };
  /**
   * ExprBytes
   */
  ExprBytes: { ExprBytes: { data: string } };
  /**
   * PrepareRequest
   */
  PrepareRequest: { deployer: string; timestamp: number; nameQty: number };
  /**
   * RhoUnforg
   */
  RhoUnforg: {
    UnforgDeploy?: definitions["UnforgDeploy"];
    UnforgDeployer?: definitions["UnforgDeployer"];
    UnforgPrivate?: definitions["UnforgPrivate"];
  };
  /**
   * UnforgPrivate
   */
  UnforgPrivate: { data: string };
  /**
   * ExploratoryDeployResponse
   */
  ExploratoryDeployResponse: {
    expr: definitions["RhoExpr"][];
    block: definitions["LightBlockInfo"];
  };
  /**
   * DataResponse
   */
  DataResponse: { exprs: definitions["RhoExprWithBlock"][]; length: number };
  /**
   * PrepareResponse
   */
  PrepareResponse: { names: string[]; seqNumber: number };
  /**
   * ExprString
   */
  ExprString: { ExprString: { data: string } };
  /**
   * RhoExprWithBlock
   */
  RhoExprWithBlock: {
    expr: definitions["RhoExpr"];
    block: definitions["LightBlockInfo"];
  };
  /**
   * LightBlockInfo
   */
  LightBlockInfo: {
    blockHash?: string;
    justifications?: definitions["JustificationInfo"][];
    timestamp?: number;
    /**
     * com.google.protobuf.ByteString
     */
    extraBytes?: string;
    bonds?: definitions["BondInfo"][];
    parentsHashList?: string[];
    shardId?: string;
    sigAlgorithm?: "secp256k1";
    sig?: string;
    blockSize?: string;
    postStateHash?: string;
    version?: number;
    seqNum?: number;
    blockNumber?: number;
    sender?: string;
    /**
     * com.google.protobuf.ByteString
     */
    headerExtraBytes?: string;
    /**
     * com.google.protobuf.ByteString
     */
    bodyExtraBytes?: string;
    faultTolerance?: number;
    preStateHash?: string;
    deployCount?: number;
  };
  /**
   * ExploreDeployRequest
   */
  ExploreDeployRequest: {
    term: string;
    blockHash: string;
    usePreStateHash: boolean;
  };
  /**
   * DeployData
   */
  DeployData: {
    /**
     * conventionally in milliseconds though not constrained by real time
     */
    timestamp: number;
    term: string;
    /**
     * bound on computation to be paid for.
     */
    phloLimit: number;
    /**
     * price (in 10^-8 REV) of each unit of computation. typically 1
     */
    phloPrice: number;
    /**
     * number of a recent block
     */
    validAfterBlockNumber: number;
  };
  /**
   * DeployInfo
   */
  DeployInfo: {
    timestamp?: number;
    /**
     * empty string indicates lack of error
     */
    systemDeployError?: string;
    term?: string;
    phloLimit?: number;
    sigAlgorithm?: "secp256k1" | "secp256k1:eth";
    deployer?: string;
    sig?: string;
    errored?: boolean;
    /**
     * in units of 10^-8 REV
     */
    cost?: number;
    /**
     * in units of 10^-8 REV
     */
    phloPrice?: number;
    validAfterBlockNumber?: number;
  };
  /**
   * JustificationInfo
   */
  JustificationInfo: { validator?: string; latestBlockHash?: string };
  /**
   * DeployRequest
   */
  DeployRequest: {
    data: definitions["DeployData"];
    deployer: string;
    signature: string;
    sigAlgorithm: "secp256k1" | "secp256k1:eth";
  };
  /**
   * ExprBool
   */
  ExprBool: { ExprBool: { data: boolean } };
  /**
   * UnforgDeploy
   */
  UnforgDeploy: { UnforgDeploy: { data: string } };
  /**
   * BlockInfo
   */
  BlockInfo: {
    blockInfo?: definitions["LightBlockInfo"];
    deploys?: definitions["DeployInfo"][];
  };
  /**
   * ExprMap
   */
  ExprMap: { ExprMap: { data: { [key: string]: ref } } };
  /**
   * UnforgDeployer
   */
  UnforgDeployer: { UnforgDeployer: { data: string } };
  /**
   * ExprUnforg
   */
  ExprUnforg: { ExprUnforg: { data: definitions["RhoUnforg"] } };
  /**
   * ExprInt
   */
  ExprInt: { ExprInt: { data: number } };
  /**
   * DataRequest
   */
  DataRequest: { name: definitions["RhoUnforg"]; depth: number };
  /**
   * ExprTuple
   */
  ExprTuple: { ExprTuple: { data: definitions["RhoExpr"][] } };
}
