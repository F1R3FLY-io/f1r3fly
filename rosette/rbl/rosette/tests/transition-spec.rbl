(test-form (if #t 1 2) 1)
(test-form (if #f 1 2) 2)

(test-form (+ 1 2) 3)
(test-form (+ 1 (+ 2 3)) 6)
(test-form (+ 1 (+ 2 (+ 3 4))) 10)

(test-form (let [[x 1] [y 2]] (+ x y)) 3)
(display (block (+ 1 2) (+ 3 4)))
(test-form (+ 1.2 2.3) 3.5)

(test-form 100 100)

(test-form (let [[x #t]]
    (label l
        (if x
            (seq (set! x #f)
                 (goto l))
            5))) 5)

(test-form (let [[x #t]]
    (label l
        (if x
            (seq (set! x #f)
                 (goto l))
            x))) #f)

(test-form (fx+ 1 (fx+ 2 3)) 6)

(test-form (and (+ 2 2) (+ 2 1)) 3)

(test-form (and
            (+ 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1)
            (+ 2 2)) 4)

(test-form (+ (+ 2 2) (+ 2 1)) 7)


(test-form (+ (+ 1 1) (+ 1 1) (+ 1 1) (+ 1 1)
              (+ 1 1) (+ 1 1) (+ 1 1) (+ 1 1)
              (+ 1 1) (+ 1 1) (+ 1 1) (+ 1 1)
              (+ 1 1) (+ 1 1) (+ 1 1) (+ 1 1)
              (+ 1 1)) 34)

(test-form (let [[x 1]] (set! x (+ 7 5))) 12)

(test-form (let [[a 8] [b 9] [c 10] [d 11] [e 12]
                 [f 13] [g 14] [h 15] [i 16] [j 17]
                 [k 18] [l 19] [m 20] [n 21]]
                (set! n (+ 1 1))) 2)