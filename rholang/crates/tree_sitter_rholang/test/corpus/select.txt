======
Select
======

contract Cell( get, set, state ) = {
  select {
    rtn <- get & v <- state => {
     rtn!( v ) | state!( v ) | Cell!( get, set, state )
    }
    newValue <- set & v <- state => {
      state!( newValue ) | Cell!( get, set, state )
    }
  }
}

---

(source_file
  (contract
    name: (var)
    formals: (names
      (var)
      (var)
      (var))
    proc: (block
      body: (choice
        branches: (branches
          (branch
            pattern: (linear_bind
              names: (names
                (var))
              input: (simple_source
                (var)))
            pattern: (linear_bind
              names: (names
                (var))
              input: (simple_source
                (var)))
            proc: (block
              body: (par
                left: (par
                  left: (send
                    name: (var)
                    send_type: (send_single)
                    inputs: (inputs
                      (var)))
                  right: (send
                    name: (var)
                    send_type: (send_single)
                    inputs: (inputs
                      (var))))
                right: (send
                  name: (var)
                  send_type: (send_single)
                  inputs: (inputs
                    (var)
                    (var)
                    (var))))))
          (branch
            pattern: (linear_bind
              names: (names
                (var))
              input: (simple_source
                (var)))
            pattern: (linear_bind
              names: (names
                (var))
              input: (simple_source
                (var)))
            proc: (block
              body: (par
                left: (send
                  name: (var)
                  send_type: (send_single)
                  inputs: (inputs
                    (var)))
                right: (send
                  name: (var)
                  send_type: (send_single)
                  inputs: (inputs
                    (var)
                    (var)
                    (var)))))))))))
