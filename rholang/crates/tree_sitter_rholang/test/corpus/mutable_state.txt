=============
Mutable state
=============

new MakeCell in {
    // Makes a single cell in which you can store values
    contract MakeCell(@init, get, set) = {
      new valueStore in {
        valueStore!(init) |
        contract get(ack) = {
          for(@value <- valueStore) {
            valueStore!(value) | ack!(value)
          }
        } |
        contract set(@newValue, ack) = {
          for(_ <- valueStore) {
            valueStore!(newValue) | ack!(true)
          }
        }
      }
    } |

    new myGet, mySet in {
      MakeCell!(123, *myGet, *mySet) |
      new ack in {
        myGet!(*ack) |
        for (@result <- ack) {
          //result now contains the value 123
          mySet!(456, *ack) |
          for (_ <- ack) {
            myGet!(*ack) |
            for (@result <- ack) {
              //result now contains the value 456
              Nil
            }
          }
        }
      }
    }
  }

---

(source_file
  (new
    decls: (decls
      (name_decl
        (var)))
    proc: (block
      body: (par
        left: (contract
          name: (var)
          formals: (names
            (quote
              (var))
            (var)
            (var))
          proc: (block
            body: (new
              decls: (decls
                (name_decl
                  (var)))
              proc: (block
                body: (par
                  left: (par
                    left: (send
                      name: (var)
                      send_type: (send_single)
                      inputs: (inputs
                        (var)))
                    right: (contract
                      name: (var)
                      formals: (names
                        (var))
                      proc: (block
                        body: (input
                          formals: (receipts
                            (receipt
                              (linear_bind
                                names: (names
                                  (quote
                                    (var)))
                                input: (simple_source
                                  (var)))))
                          proc: (block
                            body: (par
                              left: (send
                                name: (var)
                                send_type: (send_single)
                                inputs: (inputs
                                  (var)))
                              right: (send
                                name: (var)
                                send_type: (send_single)
                                inputs: (inputs
                                  (var)))))))))
                  right: (contract
                    name: (var)
                    formals: (names
                      (quote
                        (var))
                      (var))
                    proc: (block
                      body: (input
                        formals: (receipts
                          (receipt
                            (linear_bind
                              names: (names
                                (wildcard))
                              input: (simple_source
                                (var)))))
                        proc: (block
                          body: (par
                            left: (send
                              name: (var)
                              send_type: (send_single)
                              inputs: (inputs
                                (var)))
                            right: (send
                              name: (var)
                              send_type: (send_single)
                              inputs: (inputs
                                (bool_literal)))))))))))))
        right: (new
          decls: (decls
            (name_decl
              (var))
            (name_decl
              (var)))
          proc: (block
            body: (par
              left: (send
                name: (var)
                send_type: (send_single)
                inputs: (inputs
                  (long_literal)
                  (eval
                    (var))
                  (eval
                    (var))))
              right: (new
                decls: (decls
                  (name_decl
                    (var)))
                proc: (block
                  body: (par
                    left: (send
                      name: (var)
                      send_type: (send_single)
                      inputs: (inputs
                        (eval
                          (var))))
                    right: (input
                      formals: (receipts
                        (receipt
                          (linear_bind
                            names: (names
                              (quote
                                (var)))
                            input: (simple_source
                              (var)))))
                      proc: (block
                        body: (par
                          left: (send
                            name: (var)
                            send_type: (send_single)
                            inputs: (inputs
                              (long_literal)
                              (eval
                                (var))))
                          right: (input
                            formals: (receipts
                              (receipt
                                (linear_bind
                                  names: (names
                                    (wildcard))
                                  input: (simple_source
                                    (var)))))
                            proc: (block
                              body: (par
                                left: (send
                                  name: (var)
                                  send_type: (send_single)
                                  inputs: (inputs
                                    (eval
                                      (var))))
                                right: (input
                                  formals: (receipts
                                    (receipt
                                      (linear_bind
                                        names: (names
                                          (quote
                                            (var)))
                                        input: (simple_source
                                          (var)))))
                                  proc: (block
                                    body: (nil)))))))))))))))))))
