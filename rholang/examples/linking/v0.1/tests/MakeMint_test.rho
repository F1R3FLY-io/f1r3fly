import MakeMint, TestSet in {
  new mintA, mintB, result in {
    MakeMint(mintA) | MakeMint(mintB) |
    for(makeAPurse <- mintA; makeBPurse <- mintB) {
      new aliceAPurseCh, aliceBPurseCh, bobBPurseCh, bobAPurseCh in {
        makeAPurse(100, aliceAPurseCh) | makeBPurse(50, bobBPurseCh) |
        for(aliceAPurse <- aliceAPurseCh; bobBPurse <- bobBPurseCh) {
          TestSet(
            "PurseCreation",
            [
              [aliceAPurse, ["getBalance", Nil], 100],
              [bobBPurse, ["getBalance", Nil], 50]
            ],
            result
          ) |
          for(_ <- result) {
            TestSet( //cannot deposit tokens across different mints
              "CrossCurrencyDeposit",
              [
                [aliceAPurse, ["deposit", [10, bobBPurse]], false],
                [bobBPurse, ["deposit", [10, aliceAPurse]], false],
              ],
              result
            ) |
            for(_ <- result) {
              aliceAPurse("sprout", Nil, bobAPurseCh) |
              bobBPurse("sprout", Nil, aliceBPurseCh) |
              for(aliceBPurse <- aliceBPurseCh; bobAPurse <- bobAPurseCh) {
                TestSet(
                  "Deposit",
                  [
                    [aliceBPurse, ["deposit", [10, bobBPurse]], true], //10 from Bob to Alice
                    [aliceBPurse, ["getBalance", Nil], 10], //0 + 10 = 10
                    [bobBPurse, ["getBalance", Nil], 40], // 50 - 10 = 40
                    
                    [bobAPurse, ["deposit", [20, aliceAPurse]], true], //20 from Alice to Bob
                    [bobAPurse, ["getBalance", Nil], 20], //0 + 20 = 20
                    [aliceAPurse, ["getBalance", Nil], 80], // 100 - 20 = 80
                    
                    [bobAPurse, ["deposit", [30, aliceAPurse]], true], //30 from Alice to Bob again
                    [bobAPurse, ["getBalance", Nil], 50], //20 + 30 = 50
                    [aliceAPurse, ["getBalance", Nil], 50], // 80 - 30 = 50
                  ],
                  result
                )
              }
            }
          }
        }
      }
    }
  }
}