	new head, stdout(`rho:io:stdout`) in {
  // Define the head method
  contract head(@list, return) = {
    match list {
      [head ...tail] => {
        return!(head)
      }
      _ => {
        return!(Nil)
      }
    }
  } |

  // Test with a non-empty list
  new nonEmptyList, nonEmptyResult in {
    nonEmptyList!(["apple", "banana", "cherry"]) |
    
    // Invoke head with a non-empty list
    head!(["apple", "banana", "cherry"], *nonEmptyResult) |
    
    // Handle and print the result
    for (@result <- nonEmptyResult) {
      stdout!(("Head of non-empty list:", result))
    }
  } |

  // Test with an empty list
  new emptyList, emptyResult in {
    emptyList!([]) |
    
    // Invoke head with an empty list
    head!([], *emptyResult) |
    
    // Handle and print the result
    for (@result <- emptyResult) {
      stdout!(("Head of empty list:", result))
    }
  }
}