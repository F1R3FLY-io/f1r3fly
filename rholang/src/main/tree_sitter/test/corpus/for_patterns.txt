=================
Patterns in a for
=================

new people, stdout(`rho:io:stdout`) in {
    people!(@"name"!("Joe") | @"age"!(20) | @"eyes"!("blue") | @"seq"!(0)) |
    people!(@"name"!("Julie") | @"age"!(30) | @"eyes"!("brown") | @"seq"!(0)) |
    people!(@"name"!("Jane") | @"age"!(40) | @"eyes"!("green") | @"seq"!(0)) |
    people!(@"name"!("Jack") | @"age"!(50) | @"eyes"!("grey") | @"seq"!(0))|
    for (@{@"seq"!(0) | {row /\ {@"name"!(name) | @"age"!(age) | _}}} <= people) {
      if (age > 35) {
        stdout!([name, age])
      } |
      people!(row | @"seq"!(1))
    }
}

---

(source_file
  (new
    decls: (decls
      (name_decl
        (var))
      (name_decl
        (var)
        uri: (uri_literal)))
    proc: (block
      body: (par
        left: (par
          left: (par
            left: (par
              left: (send
                name: (var)
                send_type: (send_single)
                inputs: (inputs
                  (par
                    left: (par
                      left: (par
                        left: (send
                          name: (quote
                            (string_literal))
                          send_type: (send_single)
                          inputs: (inputs
                            (string_literal)))
                        right: (send
                          name: (quote
                            (string_literal))
                          send_type: (send_single)
                          inputs: (inputs
                            (long_literal))))
                      right: (send
                        name: (quote
                          (string_literal))
                        send_type: (send_single)
                        inputs: (inputs
                          (string_literal))))
                    right: (send
                      name: (quote
                        (string_literal))
                      send_type: (send_single)
                      inputs: (inputs
                        (long_literal))))))
              right: (send
                name: (var)
                send_type: (send_single)
                inputs: (inputs
                  (par
                    left: (par
                      left: (par
                        left: (send
                          name: (quote
                            (string_literal))
                          send_type: (send_single)
                          inputs: (inputs
                            (string_literal)))
                        right: (send
                          name: (quote
                            (string_literal))
                          send_type: (send_single)
                          inputs: (inputs
                            (long_literal))))
                      right: (send
                        name: (quote
                          (string_literal))
                        send_type: (send_single)
                        inputs: (inputs
                          (string_literal))))
                    right: (send
                      name: (quote
                        (string_literal))
                      send_type: (send_single)
                      inputs: (inputs
                        (long_literal)))))))
            right: (send
              name: (var)
              send_type: (send_single)
              inputs: (inputs
                (par
                  left: (par
                    left: (par
                      left: (send
                        name: (quote
                          (string_literal))
                        send_type: (send_single)
                        inputs: (inputs
                          (string_literal)))
                      right: (send
                        name: (quote
                          (string_literal))
                        send_type: (send_single)
                        inputs: (inputs
                          (long_literal))))
                    right: (send
                      name: (quote
                        (string_literal))
                      send_type: (send_single)
                      inputs: (inputs
                        (string_literal))))
                  right: (send
                    name: (quote
                      (string_literal))
                    send_type: (send_single)
                    inputs: (inputs
                      (long_literal)))))))
          right: (send
            name: (var)
            send_type: (send_single)
            inputs: (inputs
              (par
                left: (par
                  left: (par
                    left: (send
                      name: (quote
                        (string_literal))
                      send_type: (send_single)
                      inputs: (inputs
                        (string_literal)))
                    right: (send
                      name: (quote
                        (string_literal))
                      send_type: (send_single)
                      inputs: (inputs
                        (long_literal))))
                  right: (send
                    name: (quote
                      (string_literal))
                    send_type: (send_single)
                    inputs: (inputs
                      (string_literal))))
                right: (send
                  name: (quote
                    (string_literal))
                  send_type: (send_single)
                  inputs: (inputs
                    (long_literal)))))))
        right: (input
          formals: (receipts
            (repeated_bind
              names: (names
                (quote
                  (block
                    body: (par
                      left: (send
                        name: (quote
                          (string_literal))
                        send_type: (send_single)
                        inputs: (inputs
                          (long_literal)))
                      right: (block
                        body: (conjunction
                          left: (var)
                          right: (block
                            body: (par
                              left: (par
                                left: (send
                                  name: (quote
                                    (string_literal))
                                  send_type: (send_single)
                                  inputs: (inputs
                                    (var)))
                                right: (send
                                  name: (quote
                                    (string_literal))
                                  send_type: (send_single)
                                  inputs: (inputs
                                    (var))))
                              right: (wildcard)))))))))
              input: (var)))
          proc: (block
            body: (par
              left: (ifElse
                condition: (gt
                  left: (var)
                  right: (long_literal))
                ifTrue: (block
                  body: (send
                    name: (var)
                    send_type: (send_single)
                    inputs: (inputs
                      (collection
                        (list
                          (var)
                          (var)))))))
              right: (send
                name: (var)
                send_type: (send_single)
                inputs: (inputs
                  (par
                    left: (var)
                    right: (send
                      name: (quote
                        (string_literal))
                      send_type: (send_single)
                      inputs: (inputs
                        (long_literal)))))))))))))
