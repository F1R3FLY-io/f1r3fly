===========
Registry.rho
===========

new _registryStore,
    lookupCh,
    bootstrapLookup(`rho:registry:lookup`),
    insertArbitraryCh,
    bootstrapInsertArbitrary(`rho:registry:insertArbitrary`),
    insertSignedCh,
    bootstrapInsertSigned(`rho:registry:insertSigned:secp256k1`),
    buildUri,
    ops(`rho:registry:ops`),
    secpVerify(`rho:crypto:secp256k1Verify`),
    blake2b256(`rho:crypto:blake2b256Hash`),
    TreeHashMap
in {

  // TreeHashMap is defined here because the registry uses it internally.
  // We can't define it in another file like MakeMint or NonNegativeNumber because
  // that method assumes the registry already exists.

  // Rholang map desiderata: speedy insert & lookup,  no conflicts on lookup, no conflicts on inserts to different keys
  // This implementation: O(log n) insert & lookup; also provides O(1) lookup when it is known that the value at a key exists.
  // Conflict analysis
  //   Lookup
  //     When looking up a value, only peeks are used, so lookups will not conflict.
  //   Insert
  //     When inserting, only peeks are used on existing nodes (except the last
  //     shared one in the path), while newly created nodes have a different name.
  //     So there's conflict only if the keys share a common prefix that hadn't
  //     already been populated.
  // Usage
  // new o(`rho:io:stdout`), mapCh in {
  //   o!("Initializing map") |
  //   // Use 3 * 8 = 24 bits of parallelization
  //   TreeHashMap!("init", 3, *mapCh) |
  //   for (@map <- mapCh) {
  //     o!("Map initialized, setting") |
  //     new ret1, ret2, ret3, ret4, ret5, ret6, ret7 in {
  //       TreeHashMap!("set", map, "some key", "some val", *ret1) |
  //       TreeHashMap!("set", map, "monkey", "some other val", *ret2) |
  //       TreeHashMap!("set", map, "donkey", Nil, *ret3) |
  //       for (_ <- ret1 & _ <- ret2 & _ <- ret3) {
  //         o!("Value set, getting") |
  //         TreeHashMap!("get", map, "some key", *ret1) |             // "some val"
  //         TreeHashMap!("fastUnsafeGet", map, "monkey", *ret2) |     // "some other val"
  //         TreeHashMap!("get", map, "some unused key", *ret3) |      // Nil
  //         TreeHashMap!("fastUnsafeGet", map, "donkey", *ret4) |     // Nil
  //         TreeHashMap!("contains", map, "donkey", *ret5) |          // true
  //         TreeHashMap!("contains", map, "monkey", *ret6) |          // true
  //         TreeHashMap!("contains", map, "some unused key", *ret7) | // false
  //         for (@val1 <- ret1 & @val2 <- ret2 & @val3 <- ret3 & @val4 <- ret4 & @val5 <- ret5 & @val6 <- ret6 & @val7 <- ret7) {
  //           o!(["Got these from the map: ", val1, val2, val3, val4, val5, val6, val7])
  //         }
  //       }
  //     }
  //   }
  // }

  new MakeNode, ByteArrayToNybbleList,
      TreeHashMapSetter, TreeHashMapGetter, TreeHashMapContains, TreeHashMapUpdater,
      powersCh, storeToken, nodeGet in {
    match [1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536] {
      powers => {
        contract MakeNode(@initVal, @node) = {
          @[node, *storeToken]!(initVal)
        } |

        contract nodeGet(@node, ret) = {
          for (@val <<- @[node, *storeToken]) {
            ret!(val)
          }
        } |

        contract ByteArrayToNybbleList(@ba, @n, @len, @acc, ret) = {
          if (n == len) {
            ret!(acc)
          } else {
            ByteArrayToNybbleList!(ba, n+1, len, acc ++ [ ba.nth(n) % 16, ba.nth(n) / 16 ], *ret)
          }
        } |

        contract TreeHashMap(@"init", @depth, ret) = {
          new map in {
            MakeNode!(0, (*map, [])) |
            @(*map, "depth")!!(depth) |
            ret!(*map)
          }
        } |

        contract TreeHashMapGetter(@map, @nybList, @n, @len, @suffix, ret) = {
          // Look up the value of the node at (map, nybList.slice(0, n + 1))
          new valCh in {
            nodeGet!((map, nybList.slice(0, n)), *valCh) |
            for (@val <- valCh) {
              if (n == len) {
                ret!(val.get(suffix))
              } else {
                // Otherwise check if the rest of the path exists.
                // Bit k set means node k exists.
                // nybList.nth(n) is the node number
                // val & powers.nth(nybList.nth(n)) is nonzero if the node exists
                // (val / powers.nth(nybList.nth(n))) % 2 is 1 if the node exists
                if ((val / powers.nth(nybList.nth(n))) % 2 == 0) {
                  ret!(Nil)
                } else {
                  TreeHashMapGetter!(map, nybList, n + 1, len, suffix, *ret)
                }
              }
            }
          }
        } |

        contract TreeHashMap(@"get", @map, @key, ret) = {
          new hashCh, nybListCh, keccak256Hash(`rho:crypto:keccak256Hash`) in {
            // Hash the key to get a 256-bit array
            keccak256Hash!(key.toByteArray(), *hashCh) |
            for (@hash <- hashCh) {
              for (@depth <<- @(map, "depth")) {
                // Get the bit list
                ByteArrayToNybbleList!(hash, 0, depth, [], *nybListCh) |
                for (@nybList <- nybListCh) {
                  TreeHashMapGetter!(map, nybList, 0, 2 * depth, hash.slice(depth, 32), *ret)
                }
              }
            }
          }
        } |

        // Doesn't walk the path, just tries to fetch it directly.
        // Will hang if there's no key with that 64-bit prefix.
        // Returns Nil like "get" does if there is some other key with
        // the same prefix but no value there.
        contract TreeHashMap(@"fastUnsafeGet", @map, @key, ret) = {
          new hashCh, nybListCh, keccak256Hash(`rho:crypto:keccak256Hash`) in {
            // Hash the key to get a 256-bit array
            keccak256Hash!(key.toByteArray(), *hashCh) |
            for (@hash <- hashCh) {
              for(@depth <<- @(map, "depth")) {
                // Get the bit list
                ByteArrayToNybbleList!(hash, 0, depth, [], *nybListCh) |
                for (@nybList <- nybListCh) {
                  new restCh, valCh in {
                    nodeGet!((map, nybList), *restCh) |
                    for (@rest <- restCh) {
                      ret!(rest.get(hash.slice(depth, 32)))
                    }
                  }
                }
              }
            }
          }
        } |

        contract TreeHashMapSetter(@map, @nybList, @n, @len, @newVal, @suffix, ret) = {
          // Look up the value of the node at (map, nybList.slice(0, n + 1))
          new valCh, restCh in {
            match (map, nybList.slice(0, n)) {
              node => {
                for (@val <<- @[node, *storeToken]) {
                  if (n == len) {
                    // Acquire the lock on this node
                    for (@val <- @[node, *storeToken]) {
                      // If we're at the end of the path, set the node to newVal.
                      if (val == 0) {
                        // Release the lock
                        @[node, *storeToken]!({suffix: newVal}) |
                        // Return
                        ret!(Nil)
                      }
                      else {
                        // Release the lock
                        @[node, *storeToken]!(val.set(suffix, newVal)) |
                        // Return
                        ret!(Nil)
                      }
                    }
                  } else {
                    // Otherwise make the rest of the path exist.
                    // Bit k set means child node k exists.
                    if ((val/powers.nth(nybList.nth(n))) % 2 == 0) {
                      // Child node missing
                      // Acquire the lock
                      for (@val <- @[node, *storeToken]) {
                        // Re-test value
                        if ((val/powers.nth(nybList.nth(n))) % 2 == 0) {
                          // Child node still missing
                          // Create node, set node to 0
                          MakeNode!(0, (map, nybList.slice(0, n + 1))) |
                          // Update current node to val | (1 << nybList.nth(n))
                          match nybList.nth(n) {
                            bit => {
                              // val | (1 << bit)
                              // Bitwise operators would be really nice to have!
                              // Release the lock
                              @[node, *storeToken]!((val % powers.nth(bit)) +
                                (val / powers.nth(bit + 1)) * powers.nth(bit + 1) +
                                powers.nth(bit))
                            }
                          } |
                          // Child node now exists, loop
                          TreeHashMapSetter!(map, nybList, n + 1, len, newVal, suffix, *ret)
                        } else {
                          // Child node created between reads
                          // Release lock
                          @[node, *storeToken]!(val) |
                          // Loop
                          TreeHashMapSetter!(map, nybList, n + 1, len, newVal, suffix, *ret)
                        }
                      }
                    } else {
                      // Child node exists, loop
                      TreeHashMapSetter!(map, nybList, n + 1, len, newVal, suffix, *ret)
                    }
                  }
                }
              }
            }
          }
        } |

        contract TreeHashMap(@"set", @map, @key, @newVal, ret) = {
          new hashCh, nybListCh, keccak256Hash(`rho:crypto:keccak256Hash`) in {
            // Hash the key to get a 256-bit array
            keccak256Hash!(key.toByteArray(), *hashCh) |
            for (@hash <- hashCh) {
              for (@depth <<- @(map, "depth")) {
                // Get the bit list
                ByteArrayToNybbleList!(hash, 0, depth, [], *nybListCh) |
                for (@nybList <- nybListCh) {
                  TreeHashMapSetter!(map, nybList, 0, 2 * depth, newVal, hash.slice(depth, 32), *ret)
                }
              }
            }
          }
        } |

        contract TreeHashMapContains(@map, @nybList, @n, @len, @suffix, ret) = {
          // Look up the value of the node at [map, nybList.slice(0, n + 1)]
          new valCh in {
            nodeGet!((map, nybList.slice(0, n)), *valCh) |
            for (@val <- valCh) {
              if (n == len) {
                ret!(val.contains(suffix))
              } else {
                // See getter for explanation of formula
                if ((val/powers.nth(nybList.nth(n))) % 2 == 0) {
                  ret!(false)
                } else {
                  TreeHashMapContains!(map, nybList, n + 1, len, suffix, *ret)
                }
              }
            }
          }
        } |

        contract TreeHashMap(@"contains", @map, @key, ret) = {
          new hashCh, nybListCh, keccak256Hash(`rho:crypto:keccak256Hash`) in {
            // Hash the key to get a 256-bit array
            keccak256Hash!(key.toByteArray(), *hashCh) |
            for (@hash <- hashCh) {
              for (@depth <<- @(map, "depth")) {
                // Get the bit list
                ByteArrayToNybbleList!(hash, 0, depth, [], *nybListCh) |
                for (@nybList <- nybListCh) {
                  TreeHashMapContains!(map, nybList, 0, 2 * depth, hash.slice(depth, 32), *ret)
                }
              }
            }
          }
        } |

        contract TreeHashMapUpdater(@map, @nybList, @n, @len, update, @suffix, ret) = {
          // Look up the value of the node at [map, nybList.slice(0, n + 1)
          new valCh in {
            match (map, nybList.slice(0, n)) {
              node => {
                for (@val <<- @[node, *storeToken]) {
                  if (n == len) {
                    // We're at the end of the path.
                    if (val == 0) {
                      // There's nothing here.
                      // Return
                      ret!(Nil)
                    } else {
                      new resultCh in {
                        // Acquire the lock on this node
                        for (@val <- @[node, *storeToken]) {
                          // Update the current value
                          update!(val.get(suffix), *resultCh) |
                          for (@newVal <- resultCh) {
                            // Release the lock
                            @[node, *storeToken]!(val.set(suffix, newVal)) |
                            // Return
                            ret!(Nil)
                          }
                        }
                      }
                    }
                  } else {
                    // Otherwise try to reach the end of the path.
                    // Bit k set means child node k exists.
                    if ((val/powers.nth(nybList.nth(n))) % 2 == 0) {
                      // If the path doesn't exist, there's no value to update.
                      // Return
                      ret!(Nil)
                    } else {
                      // Child node exists, loop
                      TreeHashMapUpdater!(map, nybList, n + 1, len, *update, suffix, *ret)
                    }
                  }
                }
              }
            }
          }
        } |
        contract TreeHashMap(@"update", @map, @key, update, ret) = {
          new hashCh, nybListCh, keccak256Hash(`rho:crypto:keccak256Hash`) in {
            // Hash the key to get a 256-bit array
            keccak256Hash!(key.toByteArray(), *hashCh) |
            for (@hash <- hashCh) {
              for (@depth <<- @(map, "depth")) {
                // Get the bit list
                ByteArrayToNybbleList!(hash, 0, depth, [], *nybListCh) |
                for (@nybList <- nybListCh) {
                  TreeHashMapUpdater!(map, nybList, 0, 2 * depth, *update, hash.slice(depth, 32), *ret)
                }
              }
            }
          }
        }
      }
    }
  } |

  // Use 4 * 8 = 32-bit paths to leaf nodes.
  TreeHashMap!("init", 4, *_registryStore) |
  new ack in {
    for (@map <<- _registryStore) {
      TreeHashMap!("set", map, `rho:lang:treeHashMap`, bundle+{*TreeHashMap}, *ack)
    } |

    for (_ <- ack) {
      bootstrapLookup!(*lookupCh) | // this will work only once
      for (lookup <- lookupCh) {
        contract lookup(@uriOrShorthand, ret) = {
          match {
            `rho:lang:either` : `rho:id:qrh6mgfp5z6orgchgszyxnuonanz7hw3amgrprqtciia6astt66ypn`,
            `rho:lang:listOps` : `rho:id:6fzorimqngeedepkrizgiqms6zjt76zjeciktt1eifequy4osz35ks`,
            `rho:lang:nonNegativeNumber` : `rho:id:hxyadh1ffypra47ry9mk6b8r1i33ar1w9wjsez4khfe9huzrfcytx9`,
            `rho:rchain:authKey` : `rho:id:1qw5ehmq1x49dey4eadr1h4ncm361w3536asho7dr38iyookwcsp6i`,
            `rho:rchain:makeMint` : `rho:id:asysrwfgzf8bf7sxkiowp4b3tcsy4f8ombi3w96ysox4u3qdmn1wbc`,
            `rho:rchain:pos` : `rho:id:m3xk7h8r54dtqtwsrnxqzhe81baswey66nzw6m533nyd45ptyoybqr`,
            `rho:rchain:revVault` : `rho:id:6zcfqnwnaqcwpeyuysx1rm48ndr6sgsbbgjuwf45i5nor3io7dr76j`,
            `rho:rchain:multiSigRevVault` : `rho:id:b9s6j3xeobgset4ndn64hje64grfcj7a43eekb3fh43yso5ujiecfn`
          } {
            shorthands => {
              for (@map <<- _registryStore) {
                TreeHashMap!("get", map, shorthands.getOrElse(uriOrShorthand, uriOrShorthand), *ret)
              }
            }
          }
        }
      }
    }
  } |

  bootstrapInsertArbitrary!(*insertArbitraryCh) | // this will work only once
  for (insertArbitrary <- insertArbitraryCh) {
    contract insertArbitrary(@data, ret) = {

      new seed, uriCh in {
        ops!("buildUri", *seed.toByteArray(), *uriCh) |
        for (@uri <- uriCh) {
          for (@map <<- _registryStore) {
            new ack in {
              TreeHashMap!("set", map, uri, data, *ack) |
              for (_ <- ack) {
                ret!(uri)
              }
            }
          }
        }
      }
    }
  } |

  bootstrapInsertSigned!(*insertSignedCh) | // this will work only once
  for (insertSigned <- insertSignedCh) {

    contract insertSigned(@pubKeyBytes, @value, @sig, ret) = {
      match value {
        (nonce, data) => {
          new uriCh, hashCh, verifyCh in {
            blake2b256!((nonce, data).toByteArray(), *hashCh) |
            for (@hash <- hashCh) {
              secpVerify!(hash, sig, pubKeyBytes, *verifyCh) |
              for (@verified <- verifyCh) {
                if (verified) {
                  ops!("buildUri", pubKeyBytes, *uriCh) |
                  for (@uri <- uriCh) {
                    for (@map <<- _registryStore) {
                      new responseCh in {
                        TreeHashMap!("get", map, uri, *responseCh) |
                        for (@response <- responseCh) {
                          match response {
                            Nil => {
                              new ack in {
                                TreeHashMap!("set", map, uri, (nonce, data), *ack) |
                                for (_ <- ack) {
                                  ret!(uri)
                                }
                              }
                            }
                            (oldNonce, _) => {
                              if (nonce > oldNonce) {
                                new ack in {
                                  TreeHashMap!("set", map, uri, (nonce, data), *ack) |
                                  for (_ <- ack) {
                                    ret!(uri)
                                  }
                                }
                              } else {
                                ret!(Nil)
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                } else {
                  ret!(Nil)
                }
              }
            }
          }
        }
      }
    }
  }
}

---

(source_file
  (new
    decls: (decls
      (name_decl
        (var))
      (name_decl
        (var))
      (name_decl
        (var)
        uri: (uri_literal))
      (name_decl
        (var))
      (name_decl
        (var)
        uri: (uri_literal))
      (name_decl
        (var))
      (name_decl
        (var)
        uri: (uri_literal))
      (name_decl
        (var))
      (name_decl
        (var)
        uri: (uri_literal))
      (name_decl
        (var)
        uri: (uri_literal))
      (name_decl
        (var)
        uri: (uri_literal))
      (name_decl
        (var)))
    proc: (block
      body: (par
        left: (par
          left: (par
            left: (par
              left: (par
                left: (par
                  left: (new
                    decls: (decls
                      (name_decl
                        (var))
                      (name_decl
                        (var))
                      (name_decl
                        (var))
                      (name_decl
                        (var))
                      (name_decl
                        (var))
                      (name_decl
                        (var))
                      (name_decl
                        (var))
                      (name_decl
                        (var))
                      (name_decl
                        (var)))
                    proc: (block
                      body: (match
                        expression: (collection
                          (list
                            (long_literal)
                            (long_literal)
                            (long_literal)
                            (long_literal)
                            (long_literal)
                            (long_literal)
                            (long_literal)
                            (long_literal)
                            (long_literal)
                            (long_literal)
                            (long_literal)
                            (long_literal)
                            (long_literal)
                            (long_literal)
                            (long_literal)
                            (long_literal)
                            (long_literal)))
                        cases: (cases
                          (case
                            pattern: (var)
                            proc: (block
                              body: (par
                                left: (par
                                  left: (par
                                    left: (par
                                      left: (par
                                        left: (par
                                          left: (par
                                            left: (par
                                              left: (par
                                                left: (par
                                                  left: (par
                                                    left: (par
                                                      left: (contract
                                                        name: (var)
                                                        formals: (names
                                                          (quote
                                                            (var))
                                                          (quote
                                                            (var)))
                                                        proc: (block
                                                          body: (send
                                                            name: (quote
                                                              (collection
                                                                (list
                                                                  (var)
                                                                  (eval
                                                                    (var)))))
                                                            send_type: (send_single)
                                                            inputs: (inputs
                                                              (var)))))
                                                      right: (contract
                                                        name: (var)
                                                        formals: (names
                                                          (quote
                                                            (var))
                                                          (var))
                                                        proc: (block
                                                          body: (input
                                                            formals: (receipts
                                                              (peek_bind
                                                                names: (names
                                                                  (quote
                                                                    (var)))
                                                                input: (quote
                                                                  (collection
                                                                    (list
                                                                      (var)
                                                                      (eval
                                                                        (var)))))))
                                                            proc: (block
                                                              body: (send
                                                                name: (var)
                                                                send_type: (send_single)
                                                                inputs: (inputs
                                                                  (var))))))))
                                                    right: (contract
                                                      name: (var)
                                                      formals: (names
                                                        (quote
                                                          (var))
                                                        (quote
                                                          (var))
                                                        (quote
                                                          (var))
                                                        (quote
                                                          (var))
                                                        (var))
                                                      proc: (block
                                                        body: (ifElse
                                                          condition: (eq
                                                            left: (var)
                                                            right: (var))
                                                          ifTrue: (block
                                                            body: (send
                                                              name: (var)
                                                              send_type: (send_single)
                                                              inputs: (inputs
                                                                (var))))
                                                          alternative: (block
                                                            body: (send
                                                              name: (var)
                                                              send_type: (send_single)
                                                              inputs: (inputs
                                                                (var)
                                                                (add
                                                                  left: (var)
                                                                  right: (long_literal))
                                                                (var)
                                                                (concat
                                                                  left: (var)
                                                                  right: (collection
                                                                    (list
                                                                      (mod
                                                                        left: (method
                                                                          receiver: (var)
                                                                          name: (var)
                                                                          args: (args
                                                                            (var)))
                                                                        right: (long_literal))
                                                                      (div
                                                                        left: (method
                                                                          receiver: (var)
                                                                          name: (var)
                                                                          args: (args
                                                                            (var)))
                                                                        right: (long_literal)))))
                                                                (eval
                                                                  (var)))))))))
                                                  right: (contract
                                                    name: (var)
                                                    formals: (names
                                                      (quote
                                                        (string_literal))
                                                      (quote
                                                        (var))
                                                      (var))
                                                    proc: (block
                                                      body: (new
                                                        decls: (decls
                                                          (name_decl
                                                            (var)))
                                                        proc: (block
                                                          body: (par
                                                            left: (par
                                                              left: (send
                                                                name: (var)
                                                                send_type: (send_single)
                                                                inputs: (inputs
                                                                  (long_literal)
                                                                  (collection
                                                                    (tuple
                                                                      (eval
                                                                        (var))
                                                                      (collection
                                                                        (list))))))
                                                              right: (send
                                                                name: (quote
                                                                  (collection
                                                                    (tuple
                                                                      (eval
                                                                        (var))
                                                                      (string_literal))))
                                                                send_type: (send_multiple)
                                                                inputs: (inputs
                                                                  (var))))
                                                            right: (send
                                                              name: (var)
                                                              send_type: (send_single)
                                                              inputs: (inputs
                                                                (eval
                                                                  (var))))))))))
                                                right: (contract
                                                  name: (var)
                                                  formals: (names
                                                    (quote
                                                      (var))
                                                    (quote
                                                      (var))
                                                    (quote
                                                      (var))
                                                    (quote
                                                      (var))
                                                    (quote
                                                      (var))
                                                    (var))
                                                  proc: (block
                                                    body: (new
                                                      decls: (decls
                                                        (name_decl
                                                          (var)))
                                                      proc: (block
                                                        body: (par
                                                          left: (send
                                                            name: (var)
                                                            send_type: (send_single)
                                                            inputs: (inputs
                                                              (collection
                                                                (tuple
                                                                  (var)
                                                                  (method
                                                                    receiver: (var)
                                                                    name: (var)
                                                                    args: (args
                                                                      (long_literal)
                                                                      (var)))))
                                                              (eval
                                                                (var))))
                                                          right: (input
                                                            formals: (receipts
                                                              (linear_bind
                                                                names: (names
                                                                  (quote
                                                                    (var)))
                                                                input: (simple_source
                                                                  (var))))
                                                            proc: (block
                                                              body: (ifElse
                                                                condition: (eq
                                                                  left: (var)
                                                                  right: (var))
                                                                ifTrue: (block
                                                                  body: (send
                                                                    name: (var)
                                                                    send_type: (send_single)
                                                                    inputs: (inputs
                                                                      (method
                                                                        receiver: (var)
                                                                        name: (var)
                                                                        args: (args
                                                                          (var))))))
                                                                alternative: (block
                                                                  body: (ifElse
                                                                    condition: (eq
                                                                      left: (mod
                                                                        left: (div
                                                                          left: (var)
                                                                          right: (method
                                                                            receiver: (var)
                                                                            name: (var)
                                                                            args: (args
                                                                              (method
                                                                                receiver: (var)
                                                                                name: (var)
                                                                                args: (args
                                                                                  (var))))))
                                                                        right: (long_literal))
                                                                      right: (long_literal))
                                                                    ifTrue: (block
                                                                      body: (send
                                                                        name: (var)
                                                                        send_type: (send_single)
                                                                        inputs: (inputs
                                                                          (nil))))
                                                                    alternative: (block
                                                                      body: (send
                                                                        name: (var)
                                                                        send_type: (send_single)
                                                                        inputs: (inputs
                                                                          (var)
                                                                          (var)
                                                                          (add
                                                                            left: (var)
                                                                            right: (long_literal))
                                                                          (var)
                                                                          (var)
                                                                          (eval
                                                                            (var))))))))))))))))
                                              right: (contract
                                                name: (var)
                                                formals: (names
                                                  (quote
                                                    (string_literal))
                                                  (quote
                                                    (var))
                                                  (quote
                                                    (var))
                                                  (var))
                                                proc: (block
                                                  body: (new
                                                    decls: (decls
                                                      (name_decl
                                                        (var))
                                                      (name_decl
                                                        (var))
                                                      (name_decl
                                                        (var)
                                                        uri: (uri_literal)))
                                                    proc: (block
                                                      body: (par
                                                        left: (send
                                                          name: (var)
                                                          send_type: (send_single)
                                                          inputs: (inputs
                                                            (method
                                                              receiver: (var)
                                                              name: (var)
                                                              args: (args))
                                                            (eval
                                                              (var))))
                                                        right: (input
                                                          formals: (receipts
                                                            (linear_bind
                                                              names: (names
                                                                (quote
                                                                  (var)))
                                                              input: (simple_source
                                                                (var))))
                                                          proc: (block
                                                            body: (input
                                                              formals: (receipts
                                                                (peek_bind
                                                                  names: (names
                                                                    (quote
                                                                      (var)))
                                                                  input: (quote
                                                                    (collection
                                                                      (tuple
                                                                        (var)
                                                                        (string_literal))))))
                                                              proc: (block
                                                                body: (par
                                                                  left: (send
                                                                    name: (var)
                                                                    send_type: (send_single)
                                                                    inputs: (inputs
                                                                      (var)
                                                                      (long_literal)
                                                                      (var)
                                                                      (collection
                                                                        (list))
                                                                      (eval
                                                                        (var))))
                                                                  right: (input
                                                                    formals: (receipts
                                                                      (linear_bind
                                                                        names: (names
                                                                          (quote
                                                                            (var)))
                                                                        input: (simple_source
                                                                          (var))))
                                                                    proc: (block
                                                                      body: (send
                                                                        name: (var)
                                                                        send_type: (send_single)
                                                                        inputs: (inputs
                                                                          (var)
                                                                          (var)
                                                                          (long_literal)
                                                                          (mult
                                                                            left: (long_literal)
                                                                            right: (var))
                                                                          (method
                                                                            receiver: (var)
                                                                            name: (var)
                                                                            args: (args
                                                                              (var)
                                                                              (long_literal)))
                                                                          (eval
                                                                            (var)))))))))))))))))
                                            right: (contract
                                              name: (var)
                                              formals: (names
                                                (quote
                                                  (string_literal))
                                                (quote
                                                  (var))
                                                (quote
                                                  (var))
                                                (var))
                                              proc: (block
                                                body: (new
                                                  decls: (decls
                                                    (name_decl
                                                      (var))
                                                    (name_decl
                                                      (var))
                                                    (name_decl
                                                      (var)
                                                      uri: (uri_literal)))
                                                  proc: (block
                                                    body: (par
                                                      left: (send
                                                        name: (var)
                                                        send_type: (send_single)
                                                        inputs: (inputs
                                                          (method
                                                            receiver: (var)
                                                            name: (var)
                                                            args: (args))
                                                          (eval
                                                            (var))))
                                                      right: (input
                                                        formals: (receipts
                                                          (linear_bind
                                                            names: (names
                                                              (quote
                                                                (var)))
                                                            input: (simple_source
                                                              (var))))
                                                        proc: (block
                                                          body: (input
                                                            formals: (receipts
                                                              (peek_bind
                                                                names: (names
                                                                  (quote
                                                                    (var)))
                                                                input: (quote
                                                                  (collection
                                                                    (tuple
                                                                      (var)
                                                                      (string_literal))))))
                                                            proc: (block
                                                              body: (par
                                                                left: (send
                                                                  name: (var)
                                                                  send_type: (send_single)
                                                                  inputs: (inputs
                                                                    (var)
                                                                    (long_literal)
                                                                    (var)
                                                                    (collection
                                                                      (list))
                                                                    (eval
                                                                      (var))))
                                                                right: (input
                                                                  formals: (receipts
                                                                    (linear_bind
                                                                      names: (names
                                                                        (quote
                                                                          (var)))
                                                                      input: (simple_source
                                                                        (var))))
                                                                  proc: (block
                                                                    body: (new
                                                                      decls: (decls
                                                                        (name_decl
                                                                          (var))
                                                                        (name_decl
                                                                          (var)))
                                                                      proc: (block
                                                                        body: (par
                                                                          left: (send
                                                                            name: (var)
                                                                            send_type: (send_single)
                                                                            inputs: (inputs
                                                                              (collection
                                                                                (tuple
                                                                                  (var)
                                                                                  (var)))
                                                                              (eval
                                                                                (var))))
                                                                          right: (input
                                                                            formals: (receipts
                                                                              (linear_bind
                                                                                names: (names
                                                                                  (quote
                                                                                    (var)))
                                                                                input: (simple_source
                                                                                  (var))))
                                                                            proc: (block
                                                                              body: (send
                                                                                name: (var)
                                                                                send_type: (send_single)
                                                                                inputs: (inputs
                                                                                  (method
                                                                                    receiver: (var)
                                                                                    name: (var)
                                                                                    args: (args
                                                                                      (method
                                                                                        receiver: (var)
                                                                                        name: (var)
                                                                                        args: (args
                                                                                          (var)
                                                                                          (long_literal)))))))))))))))))))))))))
                                          right: (contract
                                            name: (var)
                                            formals: (names
                                              (quote
                                                (var))
                                              (quote
                                                (var))
                                              (quote
                                                (var))
                                              (quote
                                                (var))
                                              (quote
                                                (var))
                                              (quote
                                                (var))
                                              (var))
                                            proc: (block
                                              body: (new
                                                decls: (decls
                                                  (name_decl
                                                    (var))
                                                  (name_decl
                                                    (var)))
                                                proc: (block
                                                  body: (match
                                                    expression: (collection
                                                      (tuple
                                                        (var)
                                                        (method
                                                          receiver: (var)
                                                          name: (var)
                                                          args: (args
                                                            (long_literal)
                                                            (var)))))
                                                    cases: (cases
                                                      (case
                                                        pattern: (var)
                                                        proc: (block
                                                          body: (input
                                                            formals: (receipts
                                                              (peek_bind
                                                                names: (names
                                                                  (quote
                                                                    (var)))
                                                                input: (quote
                                                                  (collection
                                                                    (list
                                                                      (var)
                                                                      (eval
                                                                        (var)))))))
                                                            proc: (block
                                                              body: (ifElse
                                                                condition: (eq
                                                                  left: (var)
                                                                  right: (var))
                                                                ifTrue: (block
                                                                  body: (input
                                                                    formals: (receipts
                                                                      (linear_bind
                                                                        names: (names
                                                                          (quote
                                                                            (var)))
                                                                        input: (simple_source
                                                                          (quote
                                                                            (collection
                                                                              (list
                                                                                (var)
                                                                                (eval
                                                                                  (var))))))))
                                                                    proc: (block
                                                                      body: (ifElse
                                                                        condition: (eq
                                                                          left: (var)
                                                                          right: (long_literal))
                                                                        ifTrue: (block
                                                                          body: (par
                                                                            left: (send
                                                                              name: (quote
                                                                                (collection
                                                                                  (list
                                                                                    (var)
                                                                                    (eval
                                                                                      (var)))))
                                                                              send_type: (send_single)
                                                                              inputs: (inputs
                                                                                (collection
                                                                                  (map
                                                                                    (key_value_pair
                                                                                      key: (var)
                                                                                      value: (var))))))
                                                                            right: (send
                                                                              name: (var)
                                                                              send_type: (send_single)
                                                                              inputs: (inputs
                                                                                (nil)))))
                                                                        alternative: (block
                                                                          body: (par
                                                                            left: (send
                                                                              name: (quote
                                                                                (collection
                                                                                  (list
                                                                                    (var)
                                                                                    (eval
                                                                                      (var)))))
                                                                              send_type: (send_single)
                                                                              inputs: (inputs
                                                                                (method
                                                                                  receiver: (var)
                                                                                  name: (var)
                                                                                  args: (args
                                                                                    (var)
                                                                                    (var)))))
                                                                            right: (send
                                                                              name: (var)
                                                                              send_type: (send_single)
                                                                              inputs: (inputs
                                                                                (nil)))))))))
                                                                alternative: (block
                                                                  body: (ifElse
                                                                    condition: (eq
                                                                      left: (mod
                                                                        left: (div
                                                                          left: (var)
                                                                          right: (method
                                                                            receiver: (var)
                                                                            name: (var)
                                                                            args: (args
                                                                              (method
                                                                                receiver: (var)
                                                                                name: (var)
                                                                                args: (args
                                                                                  (var))))))
                                                                        right: (long_literal))
                                                                      right: (long_literal))
                                                                    ifTrue: (block
                                                                      body: (input
                                                                        formals: (receipts
                                                                          (linear_bind
                                                                            names: (names
                                                                              (quote
                                                                                (var)))
                                                                            input: (simple_source
                                                                              (quote
                                                                                (collection
                                                                                  (list
                                                                                    (var)
                                                                                    (eval
                                                                                      (var))))))))
                                                                        proc: (block
                                                                          body: (ifElse
                                                                            condition: (eq
                                                                              left: (mod
                                                                                left: (div
                                                                                  left: (var)
                                                                                  right: (method
                                                                                    receiver: (var)
                                                                                    name: (var)
                                                                                    args: (args
                                                                                      (method
                                                                                        receiver: (var)
                                                                                        name: (var)
                                                                                        args: (args
                                                                                          (var))))))
                                                                                right: (long_literal))
                                                                              right: (long_literal))
                                                                            ifTrue: (block
                                                                              body: (par
                                                                                left: (par
                                                                                  left: (send
                                                                                    name: (var)
                                                                                    send_type: (send_single)
                                                                                    inputs: (inputs
                                                                                      (long_literal)
                                                                                      (collection
                                                                                        (tuple
                                                                                          (var)
                                                                                          (method
                                                                                            receiver: (var)
                                                                                            name: (var)
                                                                                            args: (args
                                                                                              (long_literal)
                                                                                              (add
                                                                                                left: (var)
                                                                                                right: (long_literal))))))))
                                                                                  right: (match
                                                                                    expression: (method
                                                                                      receiver: (var)
                                                                                      name: (var)
                                                                                      args: (args
                                                                                        (var)))
                                                                                    cases: (cases
                                                                                      (case
                                                                                        pattern: (var)
                                                                                        proc: (block
                                                                                          body: (send
                                                                                            name: (quote
                                                                                              (collection
                                                                                                (list
                                                                                                  (var)
                                                                                                  (eval
                                                                                                    (var)))))
                                                                                            send_type: (send_single)
                                                                                            inputs: (inputs
                                                                                              (add
                                                                                                left: (add
                                                                                                  left: (mod
                                                                                                    left: (var)
                                                                                                    right: (method
                                                                                                      receiver: (var)
                                                                                                      name: (var)
                                                                                                      args: (args
                                                                                                        (var))))
                                                                                                  right: (mult
                                                                                                    left: (div
                                                                                                      left: (var)
                                                                                                      right: (method
                                                                                                        receiver: (var)
                                                                                                        name: (var)
                                                                                                        args: (args
                                                                                                          (add
                                                                                                            left: (var)
                                                                                                            right: (long_literal)))))
                                                                                                    right: (method
                                                                                                      receiver: (var)
                                                                                                      name: (var)
                                                                                                      args: (args
                                                                                                        (add
                                                                                                          left: (var)
                                                                                                          right: (long_literal))))))
                                                                                                right: (method
                                                                                                  receiver: (var)
                                                                                                  name: (var)
                                                                                                  args: (args
                                                                                                    (var)))))))))))
                                                                                right: (send
                                                                                  name: (var)
                                                                                  send_type: (send_single)
                                                                                  inputs: (inputs
                                                                                    (var)
                                                                                    (var)
                                                                                    (add
                                                                                      left: (var)
                                                                                      right: (long_literal))
                                                                                    (var)
                                                                                    (var)
                                                                                    (var)
                                                                                    (eval
                                                                                      (var))))))
                                                                            alternative: (block
                                                                              body: (par
                                                                                left: (send
                                                                                  name: (quote
                                                                                    (collection
                                                                                      (list
                                                                                        (var)
                                                                                        (eval
                                                                                          (var)))))
                                                                                  send_type: (send_single)
                                                                                  inputs: (inputs
                                                                                    (var)))
                                                                                right: (send
                                                                                  name: (var)
                                                                                  send_type: (send_single)
                                                                                  inputs: (inputs
                                                                                    (var)
                                                                                    (var)
                                                                                    (add
                                                                                      left: (var)
                                                                                      right: (long_literal))
                                                                                    (var)
                                                                                    (var)
                                                                                    (var)
                                                                                    (eval
                                                                                      (var))))))))))
                                                                    alternative: (block
                                                                      body: (send
                                                                        name: (var)
                                                                        send_type: (send_single)
                                                                        inputs: (inputs
                                                                          (var)
                                                                          (var)
                                                                          (add
                                                                            left: (var)
                                                                            right: (long_literal))
                                                                          (var)
                                                                          (var)
                                                                          (var)
                                                                          (eval
                                                                            (var)))))))))))))))))))
                                        right: (contract
                                          name: (var)
                                          formals: (names
                                            (quote
                                              (string_literal))
                                            (quote
                                              (var))
                                            (quote
                                              (var))
                                            (quote
                                              (var))
                                            (var))
                                          proc: (block
                                            body: (new
                                              decls: (decls
                                                (name_decl
                                                  (var))
                                                (name_decl
                                                  (var))
                                                (name_decl
                                                  (var)
                                                  uri: (uri_literal)))
                                              proc: (block
                                                body: (par
                                                  left: (send
                                                    name: (var)
                                                    send_type: (send_single)
                                                    inputs: (inputs
                                                      (method
                                                        receiver: (var)
                                                        name: (var)
                                                        args: (args))
                                                      (eval
                                                        (var))))
                                                  right: (input
                                                    formals: (receipts
                                                      (linear_bind
                                                        names: (names
                                                          (quote
                                                            (var)))
                                                        input: (simple_source
                                                          (var))))
                                                    proc: (block
                                                      body: (input
                                                        formals: (receipts
                                                          (peek_bind
                                                            names: (names
                                                              (quote
                                                                (var)))
                                                            input: (quote
                                                              (collection
                                                                (tuple
                                                                  (var)
                                                                  (string_literal))))))
                                                        proc: (block
                                                          body: (par
                                                            left: (send
                                                              name: (var)
                                                              send_type: (send_single)
                                                              inputs: (inputs
                                                                (var)
                                                                (long_literal)
                                                                (var)
                                                                (collection
                                                                  (list))
                                                                (eval
                                                                  (var))))
                                                            right: (input
                                                              formals: (receipts
                                                                (linear_bind
                                                                  names: (names
                                                                    (quote
                                                                      (var)))
                                                                  input: (simple_source
                                                                    (var))))
                                                              proc: (block
                                                                body: (send
                                                                  name: (var)
                                                                  send_type: (send_single)
                                                                  inputs: (inputs
                                                                    (var)
                                                                    (var)
                                                                    (long_literal)
                                                                    (mult
                                                                      left: (long_literal)
                                                                      right: (var))
                                                                    (var)
                                                                    (method
                                                                      receiver: (var)
                                                                      name: (var)
                                                                      args: (args
                                                                        (var)
                                                                        (long_literal)))
                                                                    (eval
                                                                      (var)))))))))))))))))
                                      right: (contract
                                        name: (var)
                                        formals: (names
                                          (quote
                                            (var))
                                          (quote
                                            (var))
                                          (quote
                                            (var))
                                          (quote
                                            (var))
                                          (quote
                                            (var))
                                          (var))
                                        proc: (block
                                          body: (new
                                            decls: (decls
                                              (name_decl
                                                (var)))
                                            proc: (block
                                              body: (par
                                                left: (send
                                                  name: (var)
                                                  send_type: (send_single)
                                                  inputs: (inputs
                                                    (collection
                                                      (tuple
                                                        (var)
                                                        (method
                                                          receiver: (var)
                                                          name: (var)
                                                          args: (args
                                                            (long_literal)
                                                            (var)))))
                                                    (eval
                                                      (var))))
                                                right: (input
                                                  formals: (receipts
                                                    (linear_bind
                                                      names: (names
                                                        (quote
                                                          (var)))
                                                      input: (simple_source
                                                        (var))))
                                                  proc: (block
                                                    body: (ifElse
                                                      condition: (eq
                                                        left: (var)
                                                        right: (var))
                                                      ifTrue: (block
                                                        body: (send
                                                          name: (var)
                                                          send_type: (send_single)
                                                          inputs: (inputs
                                                            (method
                                                              receiver: (var)
                                                              name: (var)
                                                              args: (args
                                                                (var))))))
                                                      alternative: (block
                                                        body: (ifElse
                                                          condition: (eq
                                                            left: (mod
                                                              left: (div
                                                                left: (var)
                                                                right: (method
                                                                  receiver: (var)
                                                                  name: (var)
                                                                  args: (args
                                                                    (method
                                                                      receiver: (var)
                                                                      name: (var)
                                                                      args: (args
                                                                        (var))))))
                                                              right: (long_literal))
                                                            right: (long_literal))
                                                          ifTrue: (block
                                                            body: (send
                                                              name: (var)
                                                              send_type: (send_single)
                                                              inputs: (inputs
                                                                (bool_literal))))
                                                          alternative: (block
                                                            body: (send
                                                              name: (var)
                                                              send_type: (send_single)
                                                              inputs: (inputs
                                                                (var)
                                                                (var)
                                                                (add
                                                                  left: (var)
                                                                  right: (long_literal))
                                                                (var)
                                                                (var)
                                                                (eval
                                                                  (var))))))))))))))))
                                    right: (contract
                                      name: (var)
                                      formals: (names
                                        (quote
                                          (string_literal))
                                        (quote
                                          (var))
                                        (quote
                                          (var))
                                        (var))
                                      proc: (block
                                        body: (new
                                          decls: (decls
                                            (name_decl
                                              (var))
                                            (name_decl
                                              (var))
                                            (name_decl
                                              (var)
                                              uri: (uri_literal)))
                                          proc: (block
                                            body: (par
                                              left: (send
                                                name: (var)
                                                send_type: (send_single)
                                                inputs: (inputs
                                                  (method
                                                    receiver: (var)
                                                    name: (var)
                                                    args: (args))
                                                  (eval
                                                    (var))))
                                              right: (input
                                                formals: (receipts
                                                  (linear_bind
                                                    names: (names
                                                      (quote
                                                        (var)))
                                                    input: (simple_source
                                                      (var))))
                                                proc: (block
                                                  body: (input
                                                    formals: (receipts
                                                      (peek_bind
                                                        names: (names
                                                          (quote
                                                            (var)))
                                                        input: (quote
                                                          (collection
                                                            (tuple
                                                              (var)
                                                              (string_literal))))))
                                                    proc: (block
                                                      body: (par
                                                        left: (send
                                                          name: (var)
                                                          send_type: (send_single)
                                                          inputs: (inputs
                                                            (var)
                                                            (long_literal)
                                                            (var)
                                                            (collection
                                                              (list))
                                                            (eval
                                                              (var))))
                                                        right: (input
                                                          formals: (receipts
                                                            (linear_bind
                                                              names: (names
                                                                (quote
                                                                  (var)))
                                                              input: (simple_source
                                                                (var))))
                                                          proc: (block
                                                            body: (send
                                                              name: (var)
                                                              send_type: (send_single)
                                                              inputs: (inputs
                                                                (var)
                                                                (var)
                                                                (long_literal)
                                                                (mult
                                                                  left: (long_literal)
                                                                  right: (var))
                                                                (method
                                                                  receiver: (var)
                                                                  name: (var)
                                                                  args: (args
                                                                    (var)
                                                                    (long_literal)))
                                                                (eval
                                                                  (var)))))))))))))))))
                                  right: (contract
                                    name: (var)
                                    formals: (names
                                      (quote
                                        (var))
                                      (quote
                                        (var))
                                      (quote
                                        (var))
                                      (quote
                                        (var))
                                      (var)
                                      (quote
                                        (var))
                                      (var))
                                    proc: (block
                                      body: (new
                                        decls: (decls
                                          (name_decl
                                            (var)))
                                        proc: (block
                                          body: (match
                                            expression: (collection
                                              (tuple
                                                (var)
                                                (method
                                                  receiver: (var)
                                                  name: (var)
                                                  args: (args
                                                    (long_literal)
                                                    (var)))))
                                            cases: (cases
                                              (case
                                                pattern: (var)
                                                proc: (block
                                                  body: (input
                                                    formals: (receipts
                                                      (peek_bind
                                                        names: (names
                                                          (quote
                                                            (var)))
                                                        input: (quote
                                                          (collection
                                                            (list
                                                              (var)
                                                              (eval
                                                                (var)))))))
                                                    proc: (block
                                                      body: (ifElse
                                                        condition: (eq
                                                          left: (var)
                                                          right: (var))
                                                        ifTrue: (block
                                                          body: (ifElse
                                                            condition: (eq
                                                              left: (var)
                                                              right: (long_literal))
                                                            ifTrue: (block
                                                              body: (send
                                                                name: (var)
                                                                send_type: (send_single)
                                                                inputs: (inputs
                                                                  (nil))))
                                                            alternative: (block
                                                              body: (new
                                                                decls: (decls
                                                                  (name_decl
                                                                    (var)))
                                                                proc: (block
                                                                  body: (input
                                                                    formals: (receipts
                                                                      (linear_bind
                                                                        names: (names
                                                                          (quote
                                                                            (var)))
                                                                        input: (simple_source
                                                                          (quote
                                                                            (collection
                                                                              (list
                                                                                (var)
                                                                                (eval
                                                                                  (var))))))))
                                                                    proc: (block
                                                                      body: (par
                                                                        left: (send
                                                                          name: (var)
                                                                          send_type: (send_single)
                                                                          inputs: (inputs
                                                                            (method
                                                                              receiver: (var)
                                                                              name: (var)
                                                                              args: (args
                                                                                (var)))
                                                                            (eval
                                                                              (var))))
                                                                        right: (input
                                                                          formals: (receipts
                                                                            (linear_bind
                                                                              names: (names
                                                                                (quote
                                                                                  (var)))
                                                                              input: (simple_source
                                                                                (var))))
                                                                          proc: (block
                                                                            body: (par
                                                                              left: (send
                                                                                name: (quote
                                                                                  (collection
                                                                                    (list
                                                                                      (var)
                                                                                      (eval
                                                                                        (var)))))
                                                                                send_type: (send_single)
                                                                                inputs: (inputs
                                                                                  (method
                                                                                    receiver: (var)
                                                                                    name: (var)
                                                                                    args: (args
                                                                                      (var)
                                                                                      (var)))))
                                                                              right: (send
                                                                                name: (var)
                                                                                send_type: (send_single)
                                                                                inputs: (inputs
                                                                                  (nil))))))))))))))
                                                        alternative: (block
                                                          body: (ifElse
                                                            condition: (eq
                                                              left: (mod
                                                                left: (div
                                                                  left: (var)
                                                                  right: (method
                                                                    receiver: (var)
                                                                    name: (var)
                                                                    args: (args
                                                                      (method
                                                                        receiver: (var)
                                                                        name: (var)
                                                                        args: (args
                                                                          (var))))))
                                                                right: (long_literal))
                                                              right: (long_literal))
                                                            ifTrue: (block
                                                              body: (send
                                                                name: (var)
                                                                send_type: (send_single)
                                                                inputs: (inputs
                                                                  (nil))))
                                                            alternative: (block
                                                              body: (send
                                                                name: (var)
                                                                send_type: (send_single)
                                                                inputs: (inputs
                                                                  (var)
                                                                  (var)
                                                                  (add
                                                                    left: (var)
                                                                    right: (long_literal))
                                                                  (var)
                                                                  (eval
                                                                    (var))
                                                                  (var)
                                                                  (eval
                                                                    (var)))))))))))))))))))
                                right: (contract
                                  name: (var)
                                  formals: (names
                                    (quote
                                      (string_literal))
                                    (quote
                                      (var))
                                    (quote
                                      (var))
                                    (var)
                                    (var))
                                  proc: (block
                                    body: (new
                                      decls: (decls
                                        (name_decl
                                          (var))
                                        (name_decl
                                          (var))
                                        (name_decl
                                          (var)
                                          uri: (uri_literal)))
                                      proc: (block
                                        body: (par
                                          left: (send
                                            name: (var)
                                            send_type: (send_single)
                                            inputs: (inputs
                                              (method
                                                receiver: (var)
                                                name: (var)
                                                args: (args))
                                              (eval
                                                (var))))
                                          right: (input
                                            formals: (receipts
                                              (linear_bind
                                                names: (names
                                                  (quote
                                                    (var)))
                                                input: (simple_source
                                                  (var))))
                                            proc: (block
                                              body: (input
                                                formals: (receipts
                                                  (peek_bind
                                                    names: (names
                                                      (quote
                                                        (var)))
                                                    input: (quote
                                                      (collection
                                                        (tuple
                                                          (var)
                                                          (string_literal))))))
                                                proc: (block
                                                  body: (par
                                                    left: (send
                                                      name: (var)
                                                      send_type: (send_single)
                                                      inputs: (inputs
                                                        (var)
                                                        (long_literal)
                                                        (var)
                                                        (collection
                                                          (list))
                                                        (eval
                                                          (var))))
                                                    right: (input
                                                      formals: (receipts
                                                        (linear_bind
                                                          names: (names
                                                            (quote
                                                              (var)))
                                                          input: (simple_source
                                                            (var))))
                                                      proc: (block
                                                        body: (send
                                                          name: (var)
                                                          send_type: (send_single)
                                                          inputs: (inputs
                                                            (var)
                                                            (var)
                                                            (long_literal)
                                                            (mult
                                                              left: (long_literal)
                                                              right: (var))
                                                            (eval
                                                              (var))
                                                            (method
                                                              receiver: (var)
                                                              name: (var)
                                                              args: (args
                                                                (var)
                                                                (long_literal)))
                                                            (eval
                                                              (var)))))))))))))))))))))))
                  right: (send
                    name: (var)
                    send_type: (send_single)
                    inputs: (inputs
                      (string_literal)
                      (long_literal)
                      (eval
                        (var)))))
                right: (new
                  decls: (decls
                    (name_decl
                      (var)))
                  proc: (block
                    body: (par
                      left: (input
                        formals: (receipts
                          (peek_bind
                            names: (names
                              (quote
                                (var)))
                            input: (var)))
                        proc: (block
                          body: (send
                            name: (var)
                            send_type: (send_single)
                            inputs: (inputs
                              (string_literal)
                              (var)
                              (uri_literal)
                              (bundle
                                bundle_type: (bundle_write)
                                proc: (block
                                  body: (eval
                                    (var))))
                              (eval
                                (var))))))
                      right: (input
                        formals: (receipts
                          (linear_bind
                            names: (names
                              (wildcard))
                            input: (simple_source
                              (var))))
                        proc: (block
                          body: (par
                            left: (send
                              name: (var)
                              send_type: (send_single)
                              inputs: (inputs
                                (eval
                                  (var))))
                            right: (input
                              formals: (receipts
                                (linear_bind
                                  names: (names
                                    (var))
                                  input: (simple_source
                                    (var))))
                              proc: (block
                                body: (contract
                                  name: (var)
                                  formals: (names
                                    (quote
                                      (var))
                                    (var))
                                  proc: (block
                                    body: (match
                                      expression: (collection
                                        (map
                                          (key_value_pair
                                            key: (uri_literal)
                                            value: (uri_literal))
                                          (key_value_pair
                                            key: (uri_literal)
                                            value: (uri_literal))
                                          (key_value_pair
                                            key: (uri_literal)
                                            value: (uri_literal))
                                          (key_value_pair
                                            key: (uri_literal)
                                            value: (uri_literal))
                                          (key_value_pair
                                            key: (uri_literal)
                                            value: (uri_literal))
                                          (key_value_pair
                                            key: (uri_literal)
                                            value: (uri_literal))
                                          (key_value_pair
                                            key: (uri_literal)
                                            value: (uri_literal))
                                          (key_value_pair
                                            key: (uri_literal)
                                            value: (uri_literal))))
                                      cases: (cases
                                        (case
                                          pattern: (var)
                                          proc: (block
                                            body: (input
                                              formals: (receipts
                                                (peek_bind
                                                  names: (names
                                                    (quote
                                                      (var)))
                                                  input: (var)))
                                              proc: (block
                                                body: (send
                                                  name: (var)
                                                  send_type: (send_single)
                                                  inputs: (inputs
                                                    (string_literal)
                                                    (var)
                                                    (method
                                                      receiver: (var)
                                                      name: (var)
                                                      args: (args
                                                        (var)
                                                        (var)))
                                                    (eval
                                                      (var)))))))))))))))))))))
              right: (send
                name: (var)
                send_type: (send_single)
                inputs: (inputs
                  (eval
                    (var)))))
            right: (input
              formals: (receipts
                (linear_bind
                  names: (names
                    (var))
                  input: (simple_source
                    (var))))
              proc: (block
                body: (contract
                  name: (var)
                  formals: (names
                    (quote
                      (var))
                    (var))
                  proc: (block
                    body: (new
                      decls: (decls
                        (name_decl
                          (var))
                        (name_decl
                          (var)))
                      proc: (block
                        body: (par
                          left: (send
                            name: (var)
                            send_type: (send_single)
                            inputs: (inputs
                              (string_literal)
                              (method
                                receiver: (eval
                                  (var))
                                name: (var)
                                args: (args))
                              (eval
                                (var))))
                          right: (input
                            formals: (receipts
                              (linear_bind
                                names: (names
                                  (quote
                                    (var)))
                                input: (simple_source
                                  (var))))
                            proc: (block
                              body: (input
                                formals: (receipts
                                  (peek_bind
                                    names: (names
                                      (quote
                                        (var)))
                                    input: (var)))
                                proc: (block
                                  body: (new
                                    decls: (decls
                                      (name_decl
                                        (var)))
                                    proc: (block
                                      body: (par
                                        left: (send
                                          name: (var)
                                          send_type: (send_single)
                                          inputs: (inputs
                                            (string_literal)
                                            (var)
                                            (var)
                                            (var)
                                            (eval
                                              (var))))
                                        right: (input
                                          formals: (receipts
                                            (linear_bind
                                              names: (names
                                                (wildcard))
                                              input: (simple_source
                                                (var))))
                                          proc: (block
                                            body: (send
                                              name: (var)
                                              send_type: (send_single)
                                              inputs: (inputs
                                                (var))))))))))))))))))))
          right: (send
            name: (var)
            send_type: (send_single)
            inputs: (inputs
              (eval
                (var)))))
        right: (input
          formals: (receipts
            (linear_bind
              names: (names
                (var))
              input: (simple_source
                (var))))
          proc: (block
            body: (contract
              name: (var)
              formals: (names
                (quote
                  (var))
                (quote
                  (var))
                (quote
                  (var))
                (var))
              proc: (block
                body: (match
                  expression: (var)
                  cases: (cases
                    (case
                      pattern: (collection
                        (tuple
                          (var)
                          (var)))
                      proc: (block
                        body: (new
                          decls: (decls
                            (name_decl
                              (var))
                            (name_decl
                              (var))
                            (name_decl
                              (var)))
                          proc: (block
                            body: (par
                              left: (send
                                name: (var)
                                send_type: (send_single)
                                inputs: (inputs
                                  (method
                                    receiver: (collection
                                      (tuple
                                        (var)
                                        (var)))
                                    name: (var)
                                    args: (args))
                                  (eval
                                    (var))))
                              right: (input
                                formals: (receipts
                                  (linear_bind
                                    names: (names
                                      (quote
                                        (var)))
                                    input: (simple_source
                                      (var))))
                                proc: (block
                                  body: (par
                                    left: (send
                                      name: (var)
                                      send_type: (send_single)
                                      inputs: (inputs
                                        (var)
                                        (var)
                                        (var)
                                        (eval
                                          (var))))
                                    right: (input
                                      formals: (receipts
                                        (linear_bind
                                          names: (names
                                            (quote
                                              (var)))
                                          input: (simple_source
                                            (var))))
                                      proc: (block
                                        body: (ifElse
                                          condition: (var)
                                          ifTrue: (block
                                            body: (par
                                              left: (send
                                                name: (var)
                                                send_type: (send_single)
                                                inputs: (inputs
                                                  (string_literal)
                                                  (var)
                                                  (eval
                                                    (var))))
                                              right: (input
                                                formals: (receipts
                                                  (linear_bind
                                                    names: (names
                                                      (quote
                                                        (var)))
                                                    input: (simple_source
                                                      (var))))
                                                proc: (block
                                                  body: (input
                                                    formals: (receipts
                                                      (peek_bind
                                                        names: (names
                                                          (quote
                                                            (var)))
                                                        input: (var)))
                                                    proc: (block
                                                      body: (new
                                                        decls: (decls
                                                          (name_decl
                                                            (var)))
                                                        proc: (block
                                                          body: (par
                                                            left: (send
                                                              name: (var)
                                                              send_type: (send_single)
                                                              inputs: (inputs
                                                                (string_literal)
                                                                (var)
                                                                (var)
                                                                (eval
                                                                  (var))))
                                                            right: (input
                                                              formals: (receipts
                                                                (linear_bind
                                                                  names: (names
                                                                    (quote
                                                                      (var)))
                                                                  input: (simple_source
                                                                    (var))))
                                                              proc: (block
                                                                body: (match
                                                                  expression: (var)
                                                                  cases: (cases
                                                                    (case
                                                                      pattern: (nil)
                                                                      proc: (block
                                                                        body: (new
                                                                          decls: (decls
                                                                            (name_decl
                                                                              (var)))
                                                                          proc: (block
                                                                            body: (par
                                                                              left: (send
                                                                                name: (var)
                                                                                send_type: (send_single)
                                                                                inputs: (inputs
                                                                                  (string_literal)
                                                                                  (var)
                                                                                  (var)
                                                                                  (collection
                                                                                    (tuple
                                                                                      (var)
                                                                                      (var)))
                                                                                  (eval
                                                                                    (var))))
                                                                              right: (input
                                                                                formals: (receipts
                                                                                  (linear_bind
                                                                                    names: (names
                                                                                      (wildcard))
                                                                                    input: (simple_source
                                                                                      (var))))
                                                                                proc: (block
                                                                                  body: (send
                                                                                    name: (var)
                                                                                    send_type: (send_single)
                                                                                    inputs: (inputs
                                                                                      (var))))))))))
                                                                    (case
                                                                      pattern: (collection
                                                                        (tuple
                                                                          (var)
                                                                          (wildcard)))
                                                                      proc: (block
                                                                        body: (ifElse
                                                                          condition: (gt
                                                                            left: (var)
                                                                            right: (var))
                                                                          ifTrue: (block
                                                                            body: (new
                                                                              decls: (decls
                                                                                (name_decl
                                                                                  (var)))
                                                                              proc: (block
                                                                                body: (par
                                                                                  left: (send
                                                                                    name: (var)
                                                                                    send_type: (send_single)
                                                                                    inputs: (inputs
                                                                                      (string_literal)
                                                                                      (var)
                                                                                      (var)
                                                                                      (collection
                                                                                        (tuple
                                                                                          (var)
                                                                                          (var)))
                                                                                      (eval
                                                                                        (var))))
                                                                                  right: (input
                                                                                    formals: (receipts
                                                                                      (linear_bind
                                                                                        names: (names
                                                                                          (wildcard))
                                                                                        input: (simple_source
                                                                                          (var))))
                                                                                    proc: (block
                                                                                      body: (send
                                                                                        name: (var)
                                                                                        send_type: (send_single)
                                                                                        inputs: (inputs
                                                                                          (var)))))))))
                                                                          alternative: (block
                                                                            body: (send
                                                                              name: (var)
                                                                              send_type: (send_single)
                                                                              inputs: (inputs
                                                                                (nil))))))))))))))))))))
                                          alternative: (block
                                            body: (send
                                              name: (var)
                                              send_type: (send_single)
                                              inputs: (inputs
                                                (nil)))))))))))))))))))))))))
