================
Sequential send
================

new chan, ack, stdoutAck(`rho:io:stdoutAck`) in {
  chan!(0) |
  for (_ <- ack) {
    chan!(1)
  } |
  for (@num <= chan) {
    stdoutAck!(num, *ack)
  }
}

---

(source_file
  (new
    decls: (decls
      (name_decl
        (var))
      (name_decl
        (var))
      (name_decl
        (var)
        uri: (uri_literal)))
    proc: (block
      body: (par
        left: (par
          left: (send
            name: (proc_var
              (var))
            send_type: (send_single)
            inputs: (inputs
              (long_literal)))
          right: (input
            formals: (receipts
              (linear_bind
                names: (names
                  (proc_var
                    (wildcard)))
                input: (simple_source
                  (proc_var
                    (var)))))
            proc: (block
              body: (send
                name: (proc_var
                  (var))
                send_type: (send_single)
                inputs: (inputs
                  (long_literal))))))
        right: (input
          formals: (receipts
            (repeated_bind
              names: (names
                (quote
                  (proc_var
                    (var))))
              input: (proc_var
                (var))))
          proc: (block
            body: (send
              name: (proc_var
                (var))
              send_type: (send_single)
              inputs: (inputs
                (proc_var
                  (var))
                (eval
                  (proc_var
                    (var)))))))))))
