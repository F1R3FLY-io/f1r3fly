x-rnode: &default-rnode
  image: f1r3flyindustries/f1r3fly-rust-node:bitcoin-anchor
  user: root
  networks:
    - f1r3fly

services:
  boot:
    <<: *default-rnode
    container_name: $BOOTSTRAP_HOST
    command:
      [
        "run",
        "--host=$BOOTSTRAP_HOST",
        "--allow-private-addresses",
        "--validator-private-key=$BOOTSTRAP_PRIVATE_KEY",
      ]
    ports:
      - "40400:40400"
      - "40401:40401"
      - "40402:40402"
      - "40403:40403"
      - "40404:40404"
      - "40405:40405"
    volumes:
      # Bootstrap-specific configuration (ceremony master)
      - ./conf/bootstrap-ceremony.conf:/var/lib/rnode/rnode.conf
      - ./genesis/wallets.txt:/var/lib/rnode/genesis/wallets.txt
      - ./genesis/bonds.txt:/var/lib/rnode/genesis/bonds.txt
      - ./conf/logback.xml:/var/lib/rnode/logback.xml
      # Node-specific volumes
      - ./data/$BOOTSTRAP_HOST:/var/lib/rnode/
      - ./certs/bootstrap/node.certificate.pem:/var/lib/rnode/node.certificate.pem:ro
      - ./certs/bootstrap/node.key.pem:/var/lib/rnode/node.key.pem:ro

  validator1:
    <<: *default-rnode
    container_name: $VALIDATOR1_HOST
    command:
      [
        "run",
        "--host=$VALIDATOR1_HOST",
        "--allow-private-addresses",
        "--bootstrap=rnode://$BOOTSTRAP_NODE_ID@$BOOTSTRAP_HOST?protocol=40400&discovery=40404",
        "--validator-public-key=$VALIDATOR1_PUBLIC_KEY",
        "--validator-private-key=$VALIDATOR1_PRIVATE_KEY",
        "--genesis-validator"
      ]
    ports:
      - "40410:40400"
      - "40411:40401"
      - "40412:40402"
      - "40413:40403"
      - "40414:40404"
      - "40415:40405"
    volumes:
      - ./conf/shared-rnode.conf:/var/lib/rnode/rnode.conf
      - ./genesis/wallets.txt:/var/lib/rnode/genesis/wallets.txt
      - ./genesis/bonds.txt:/var/lib/rnode/genesis/bonds.txt
      - ./conf/logback.xml:/var/lib/rnode/logback.xml
      - ./data/$VALIDATOR1_HOST:/var/lib/rnode/
      - ./certs/validator1/node.certificate.pem:/var/lib/rnode/node.certificate.pem:ro
      - ./certs/validator1/node.key.pem:/var/lib/rnode/node.key.pem:ro

  validator2:
    <<: *default-rnode
    container_name: $VALIDATOR2_HOST
    command:
      [
        "run",
        "--host=$VALIDATOR2_HOST",
        "--allow-private-addresses",
        "--bootstrap=rnode://$BOOTSTRAP_NODE_ID@$BOOTSTRAP_HOST?protocol=40400&discovery=40404",
        "--validator-public-key=$VALIDATOR2_PUBLIC_KEY",
        "--validator-private-key=$VALIDATOR2_PRIVATE_KEY",
        "--genesis-validator"
      ]
    ports:
      - "40420:40400"
      - "40421:40401"
      - "40422:40402"
      - "40423:40403"
      - "40424:40404"
      - "40425:40405"
    volumes:
      - ./conf/shared-rnode.conf:/var/lib/rnode/rnode.conf
      - ./genesis/wallets.txt:/var/lib/rnode/genesis/wallets.txt
      - ./genesis/bonds.txt:/var/lib/rnode/genesis/bonds.txt
      - ./conf/logback.xml:/var/lib/rnode/logback.xml
      - ./data/$VALIDATOR2_HOST:/var/lib/rnode/
      - ./certs/validator2/node.certificate.pem:/var/lib/rnode/node.certificate.pem:ro
      - ./certs/validator2/node.key.pem:/var/lib/rnode/node.key.pem:ro

  validator3:
    <<: *default-rnode
    container_name: $VALIDATOR3_HOST
    command:
      [
        "run",
        "--host=$VALIDATOR3_HOST",
        "--allow-private-addresses",
        "--bootstrap=rnode://$BOOTSTRAP_NODE_ID@$BOOTSTRAP_HOST?protocol=40400&discovery=40404",
        "--validator-public-key=$VALIDATOR3_PUBLIC_KEY",
        "--validator-private-key=$VALIDATOR3_PRIVATE_KEY",
        "--genesis-validator"
      ]
    ports:
      - "40430:40400"
      - "40431:40401"
      - "40432:40402"
      - "40433:40403"
      - "40434:40404"
      - "40435:40405"
    volumes:
      - ./conf/shared-rnode.conf:/var/lib/rnode/rnode.conf
      - ./genesis/wallets.txt:/var/lib/rnode/genesis/wallets.txt
      - ./genesis/bonds.txt:/var/lib/rnode/genesis/bonds.txt
      - ./conf/logback.xml:/var/lib/rnode/logback.xml
      - ./data/$VALIDATOR3_HOST:/var/lib/rnode/
      - ./certs/validator3/node.certificate.pem:/var/lib/rnode/node.certificate.pem:ro
      - ./certs/validator3/node.key.pem:/var/lib/rnode/node.key.pem:ro

  # =================================================================
  # AUTOPROPOSE SERVICE - RChain-Inspired Continuous Block Proposing
  # =================================================================
  autopropose:
    build: ./autopropose
    container_name: autopropose
    restart: unless-stopped
    networks:
      - f1r3fly
    volumes:
      # Configuration files
      - ./autopropose/config.yml:/app/config.yml:ro
      # Contract files for deployment
      - ./resources:/contracts:ro
      # Optional: logs directory
      - ./logs:/var/log
    environment:
      - PYTHONUNBUFFERED=1
      - TZ=UTC
    # Wait for validators to be ready before starting autopropose
    depends_on:
      - boot
      - validator1
      - validator2
      - validator3
    # Health check to ensure service is running
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    # Optional: monitoring port (uncomment if monitoring enabled in config)
    # ports:
    #   - "8080:8080"

networks:
  f1r3fly:
    driver: bridge 