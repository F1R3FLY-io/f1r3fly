{{/* Creates separate Service for each StatefulSet */}}
{{- $deployableReplicas := int64 .Values.shardConfig.deployableReplicas }}
{{- $readOnlyReplicas := int64 .Values.shardConfig.readOnlyReplicas }}
{{- $totalReplicas := int (add $deployableReplicas $readOnlyReplicas) }}
{{- range $index, $e := until $totalReplicas }}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "f1r3fly.fullname" $ }}{{ $index }}
  labels:
    {{- include "f1r3fly.labels" $ | nindent 4 }}
  {{- if $.Values.metrics.enablePrometheus }}
  annotations:
    prometheus.io/port: "40403"
    prometheus.io/path: "/metrics"
    prometheus.io/scrape: "true"
  {{- end }}
spec:
  type: {{ $.Values.service.type }}
  ports:
    {{- range $port := $.Values.service.ports }}
    - name: {{ $port.containerPort | quote }}
      targetPort: {{ $port.containerPort | toString }}
      port: {{ $port.containerPort }}
      protocol: TCP
      {{- if eq $.Values.service.type "NodePort" }}
      {{- /* 
      Creates custom NodePort for each Container Port
      by tempalte "(first digists from port)(replica count index)(last number from container port)"
      
      Example:
      - 40402 for 0th replica   => 30002
      - 40402 for 1th replica   => 30012
      - 40402 for 9th replica   => 30092
      - 40402 for 10th replica  => 30102
      - 40402 for 99th replica  => 30992
      - 40402 for 500th replica  => 35002
      
      Limitation: supports 1-1000 replicas only
      */}}
      {{- if gt $totalReplicas 1000 }}
      {{ fail "Template limitation: can't generate 'nodePort' for more than 1000 replicas" }}
      {{- end }}
      {{- $nodePort := printf "%s%03d%s" (trunc 1 ($port.nodePort | toString)) $index (trunc -1 ($port.nodePort | toString)) }}
      nodePort: {{ $nodePort }}
      {{- end }}
    {{- end }}
  selector:
    node: {{ include "f1r3fly.fullname" $ }}{{ $index }}
---
{{- end }}
